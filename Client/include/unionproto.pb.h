/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.9 at Fri Sep 29 11:37:01 2017. */

#ifndef PB_UNIONPROTO_PB_H_INCLUDED
#define PB_UNIONPROTO_PB_H_INCLUDED
#include "pb.h"
#include <SDL.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

	/* Struct definitions */
	typedef struct _ConnectionCallbackMessage {
		bool sucess;
		char motd[128];
		int32_t map;
		int32_t clientId;
		/* @@protoc_insertion_point(struct:ConnectionCallbackMessage) */
	} ConnectionCallbackMessage;

	typedef struct _ConnectionMessage {
		char name[16];
		/* @@protoc_insertion_point(struct:ConnectionMessage) */
	} ConnectionMessage;

	typedef struct _GameDataMessage {
		int32_t gameMode;
		int32_t playersCount;
		pb_callback_t players;
		pb_callback_t bullets;
		/* @@protoc_insertion_point(struct:GameDataMessage) */
	} GameDataMessage;

	typedef struct _SpawnMessage {
		int32_t id;
		/* @@protoc_insertion_point(struct:SpawnMessage) */
	} SpawnMessage;

	typedef struct _BulletMessage {
		int32_t id;
		int32_t state;
		SDL_Rect pos;
		SDL_Rect dest;
		int32_t ownerId;
		/* @@protoc_insertion_point(struct:BulletMessage) */
	} BulletMessage;

	typedef struct _PlayerBase {
		int32_t id;
		int32_t health;
		int32_t ammo;
		int32_t state;
		int32_t orientation;
		SDL_Rect pos;
		/* @@protoc_insertion_point(struct:PlayerBase) */
	} PlayerBase;

	typedef struct _Player {
		PlayerBase playerBase;
		int32_t lastAnim;
		SDL_Rect sprite;
		int32_t walkAnimationStep;
		int32_t deathAnimationStep;
		char name[16];
		/* @@protoc_insertion_point(struct:Player) */
	} Player;

	typedef struct _UnionMessage {
		bool has_connCallbackMessage;
		ConnectionMessage connCallbackMessage;
		bool has_connMessage;
		ConnectionCallbackMessage connMessage;
		bool has_bulletMessage;
		BulletMessage bulletMessage;
		bool has_playerMessage;
		PlayerBase playerMessage;
		bool has_spawnMessage;
		SpawnMessage spawnMessage;
		bool has_gameDataMessage;
		GameDataMessage gameDataMessage;
		/* @@protoc_insertion_point(struct:UnionMessage) */
	} UnionMessage;

	/* Default values for struct fields */

	/* Initializer values for message structs */
#define ConnectionCallbackMessage_init_default   {0, "", 0, 0}
#define ConnectionMessage_init_default           {""}
#define SpawnMessage_init_default                {0}
#define GameDataMessage_init_default             {0, 0, {{NULL}, NULL}, {{NULL}, NULL}}
#define SDL_Rect_init_default                    {0, 0, 0, 0}
#define PlayerBase_init_default                  {-1, 100, 30, 0, 0, {800, 800, 32, 32}}
#define Player_init_default                      {PlayerBase_init_default, 0, {1, 1, 32, 32}, 0, 0, ""}
#define BulletMessage_init_default               {0, 0, SDL_Rect_init_default, SDL_Rect_init_default, 0}
#define UnionMessage_init_default                {false, ConnectionMessage_init_default, false, ConnectionCallbackMessage_init_default, false, BulletMessage_init_default, false, PlayerBase_init_default, false, SpawnMessage_init_default, false, GameDataMessage_init_default}
#define ConnectionCallbackMessage_init_zero      {0, "", 0, 0}
#define ConnectionMessage_init_zero              {""}
#define SpawnMessage_init_zero                   {0}
#define GameDataMessage_init_zero                {0, 0, {{NULL}, NULL}, {{NULL}, NULL}}
#define SDL_Rect_init_zero                       {0, 0, 0, 0}
#define PlayerBase_init_zero                     {0, 0, 0, 0, 0, SDL_Rect_init_zero}
#define Player_init_zero                         {PlayerBase_init_zero, 0, SDL_Rect_init_zero, 0, 0, ""}
#define BulletMessage_init_zero                  {0, 0, SDL_Rect_init_zero, SDL_Rect_init_zero, 0}
#define UnionMessage_init_zero                   {false, ConnectionMessage_init_zero, false, ConnectionCallbackMessage_init_zero, false, BulletMessage_init_zero, false, PlayerBase_init_zero, false, SpawnMessage_init_zero, false, GameDataMessage_init_zero}

	/* Field tags (for use in manual encoding/decoding) */
#define ConnectionCallbackMessage_sucess_tag     1
#define ConnectionCallbackMessage_motd_tag       2
#define ConnectionCallbackMessage_map_tag        3
#define ConnectionCallbackMessage_clientId_tag   4
#define ConnectionMessage_name_tag               1
#define GameDataMessage_gameMode_tag             1
#define GameDataMessage_playersCount_tag         2
#define GameDataMessage_players_tag              3
#define GameDataMessage_bullets_tag              4
#define SDL_Rect_x_tag                           1
#define SDL_Rect_y_tag                           2
#define SDL_Rect_h_tag                           3
#define SDL_Rect_w_tag                           4
#define SpawnMessage_id_tag                      1
#define BulletMessage_id_tag                     1
#define BulletMessage_state_tag                  2
#define BulletMessage_pos_tag                    3
#define BulletMessage_dest_tag                   4
#define BulletMessage_ownerId_tag                5
#define PlayerBase_id_tag                        1
#define PlayerBase_health_tag                    2
#define PlayerBase_ammo_tag                      3
#define PlayerBase_state_tag                     4
#define PlayerBase_orientation_tag               5
#define PlayerBase_pos_tag                       6
#define Player_playerBase_tag                    1
#define Player_lastAnim_tag                      2
#define Player_sprite_tag                        3
#define Player_walkAnimationStep_tag             4
#define Player_deathAnimationStep_tag            5
#define Player_name_tag                          6
#define UnionMessage_connCallbackMessage_tag     1
#define UnionMessage_connMessage_tag             2
#define UnionMessage_bulletMessage_tag           3
#define UnionMessage_playerMessage_tag           4
#define UnionMessage_spawnMessage_tag            5
#define UnionMessage_gameDataMessage_tag         6

	/* Struct field encoding specification for nanopb */
	extern const pb_field_t ConnectionCallbackMessage_fields[5];
	extern const pb_field_t ConnectionMessage_fields[2];
	extern const pb_field_t SpawnMessage_fields[2];
	extern const pb_field_t GameDataMessage_fields[5];
	extern const pb_field_t SDL_Rect_fields[5];
	extern const pb_field_t PlayerBase_fields[7];
	extern const pb_field_t Player_fields[7];
	extern const pb_field_t BulletMessage_fields[6];
	extern const pb_field_t UnionMessage_fields[7];

	/* Maximum encoded size of messages (where known) */
#define ConnectionCallbackMessage_size           155
#define ConnectionMessage_size                   18
#define SpawnMessage_size                        11
	/* GameDataMessage_size depends on runtime parameters */
#define SDL_Rect_size                            44
#define PlayerBase_size                          101
#define Player_size                              200
#define BulletMessage_size                       125
#define UnionMessage_size                        (427 + GameDataMessage_size)

	/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define UNIONPROTO_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
  /* @@protoc_insertion_point(eof) */

#endif
