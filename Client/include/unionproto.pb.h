/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.8 at Tue Aug 08 15:56:51 2017. */

#ifndef PB_UNIONPROTO_PB_H_INCLUDED
#define PB_UNIONPROTO_PB_H_INCLUDED
#define  PB_FIELD_16BIT
#include "pb.h"
#include <SDL.h>
/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

	/* Struct definitions */
	typedef struct _ConnectionMessage {
		char name[16];
		/* @@protoc_insertion_point(struct:ConnectionMessage) */
	} ConnectionMessage;

	typedef struct _GameDataMessage {
		int32_t GameMode;
		pb_callback_t players;
		/* @@protoc_insertion_point(struct:GameDataMessage) */
	} GameDataMessage;

	typedef struct _BulletMessage {
		SDL_Rect Pos;
		/* @@protoc_insertion_point(struct:BulletMessage) */
	} BulletMessage;

	typedef struct _Player {
		int32_t x;
		int32_t y;
		char name[16];
		int32_t id;
		pb_callback_t bullets;
		bool calibred;
		int32_t health;
		int32_t ammo;
		int32_t step;
		bool fire;
		int32_t state;
		bool walk;
		int32_t lastAnim;
		int32_t fireIdle;
		SDL_Rect Pos;
		SDL_Rect sprite;
		/* @@protoc_insertion_point(struct:Player) */
	} Player;

	typedef struct _ConnectionCallbackMessage {
		bool sucess;
		int32_t clentId;
		Player player;
		char motd[128];
		/* @@protoc_insertion_point(struct:ConnectionCallbackMessage) */
	} ConnectionCallbackMessage;

	typedef struct _UnionMessage {
		bool has_a;
		BulletMessage a;
		bool has_b;
		ConnectionCallbackMessage b;
		bool has_c;
		ConnectionMessage c;
		bool has_d;
		GameDataMessage d;
		/* @@protoc_insertion_point(struct:UnionMessage) */
	} UnionMessage;

	/* Default values for struct fields */

	/* Initializer values for message structs */
#define BulletMessage_init_default               {SDL_Rect_init_default}
#define SDL_Rect_init_default                    {0, 0, 0, 0}
#define Player_init_default                      {0, 0, "", 0, {{NULL}, NULL}, 0, 0, 0, 0, 0, 0, 0, 0, 0, SDL_Rect_init_default, SDL_Rect_init_default}
#define GameDataMessage_init_default             {0, {{NULL}, NULL}}
#define ConnectionMessage_init_default           {""}
#define ConnectionCallbackMessage_init_default   {0, 0, Player_init_default, ""}
#define UnionMessage_init_default                {false, BulletMessage_init_default, false, ConnectionCallbackMessage_init_default, false, ConnectionMessage_init_default, false, GameDataMessage_init_default}
#define BulletMessage_init_zero                  {SDL_Rect_init_zero}
#define SDL_Rect_init_zero                       {0, 0, 0, 0}
#define Player_init_zero                         {0, 0, "", 0, {{NULL}, NULL}, 0, 0, 0, 0, 0, 0, 0, 0, 0, SDL_Rect_init_zero, SDL_Rect_init_zero}
#define GameDataMessage_init_zero                {0, {{NULL}, NULL}}
#define ConnectionMessage_init_zero              {""}
#define ConnectionCallbackMessage_init_zero      {0, 0, Player_init_zero, ""}
#define UnionMessage_init_zero                   {false, BulletMessage_init_zero, false, ConnectionCallbackMessage_init_zero, false, ConnectionMessage_init_zero, false, GameDataMessage_init_zero}

	/* Field tags (for use in manual encoding/decoding) */
#define ConnectionMessage_name_tag               1
#define GameDataMessage_GameMode_tag             1
#define GameDataMessage_players_tag              2
#define SDL_Rect_x_tag                           1
#define SDL_Rect_y_tag                           2
#define SDL_Rect_h_tag                           3
#define SDL_Rect_w_tag                           4
#define BulletMessage_Pos_tag                    1
#define Player_x_tag                             1
#define Player_y_tag                             2
#define Player_name_tag                          3
#define Player_id_tag                            4
#define Player_bullets_tag                       5
#define Player_calibred_tag                      6
#define Player_health_tag                        7
#define Player_ammo_tag                          8
#define Player_step_tag                          9
#define Player_fire_tag                          10
#define Player_state_tag                         11
#define Player_walk_tag                          12
#define Player_lastAnim_tag                      13
#define Player_fireIdle_tag                      14
#define Player_Pos_tag                           15
#define Player_sprite_tag                        16
#define ConnectionCallbackMessage_sucess_tag     1
#define ConnectionCallbackMessage_clentId_tag    2
#define ConnectionCallbackMessage_player_tag     3
#define ConnectionCallbackMessage_motd_tag       4
#define UnionMessage_a_tag                       1
#define UnionMessage_b_tag                       2
#define UnionMessage_c_tag                       3
#define UnionMessage_d_tag                       4

	/* Struct field encoding specification for nanopb */
	extern const pb_field_t BulletMessage_fields[2];
	extern const pb_field_t SDL_Rect_fields[5];
	extern const pb_field_t Player_fields[17];
	extern const pb_field_t GameDataMessage_fields[3];
	extern const pb_field_t ConnectionMessage_fields[2];
	extern const pb_field_t ConnectionCallbackMessage_fields[5];
	extern const pb_field_t UnionMessage_fields[5];

	/* Maximum encoded size of messages (where known) */
#define BulletMessage_size                       46
#define SDL_Rect_size                            44
	/* Player_size depends on runtime parameters */
	/* GameDataMessage_size depends on runtime parameters */
#define ConnectionMessage_size                   18
#define ConnectionCallbackMessage_size           (150 + Player_size)
#define UnionMessage_size                        (230 + Player_size + GameDataMessage_size)

	/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define UNIONPROTO_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
  /* @@protoc_insertion_point(eof) */

#endif
